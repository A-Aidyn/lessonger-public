"""
Django settings for lessonger project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u_nyknzce174c*%63t^_47rzkzy*1k-jz!4__$k82#038g3imk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

if not DEBUG:
    SERVER_HOST_NAME = 'api.lessonger.com'
    FRONTEND_HOST_NAME = 'lessonger.com'
    SERVER_URL = f'https://{SERVER_HOST_NAME}'
    FRONTEND_URL = f'https://{FRONTEND_HOST_NAME}'
else:
    SERVER_HOST_NAME = 'localhost:8000'
    FRONTEND_HOST_NAME = 'localhost:1234'
    SERVER_URL = f'http://{SERVER_HOST_NAME}'
    FRONTEND_URL = f'http://{FRONTEND_HOST_NAME}'


ALLOWED_HOSTS = [SERVER_HOST_NAME, 'localhost', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django_tgbot',
    'lessongerbot',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'user_profile',
    'files',
    'chat',
    'channels',
    'corsheaders',
    'lessonger',

    'private_storage',
    'rest_framework',
    'rest_framework.authtoken',


    'dj_rest_auth',
    'dj_rest_auth.registration',
    'storages',
    'feedback',
    'push_notifications'
]

SITE_ID = 1

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'lessonger.middleware.HealthCheckMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lessonger.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'lessonger/templates'),  # Add this inside the DIRS list
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lessonger.wsgi.application'
ASGI_APPLICATION = 'lessonger.asgi.application'


if not DEBUG:
    CHANNEL_LAYERS = {
        'default': {
            'BACKEND': 'channels_redis.core.RedisChannelLayer',
            'CONFIG': {
                "hosts": [('lessonger.aaavw4.0001.apn2.cache.amazonaws.com', 6379)],
                # "hosts": [
                #     "redis://:zPhzUE0hOuHLIOOX2bBnvRRRi0aTolcp@sg-lessonger-42718.servers.mongodirector.com:6379/0"],
            },
        },
    }
else:
    CHANNEL_LAYERS = {
        'default': {
            'BACKEND': "channels.layers.InMemoryChannelLayer"
        },
    }


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

if not DEBUG:
    print('Amazon DB YAY!')
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',

            'NAME': '',

            'USER': '',

            'PASSWORD': '',

            'HOST': '',

            'PORT': '',

        },
    }
else:
    print('default DB :(')
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
            'NAME': 'sqlite3.db',  # Or path to database file if using sqlite3.
            'USER': '',  # Not used with sqlite3.
            'PASSWORD': '',  # Not used with sqlite3.
            'HOST': '',  # Set to empty string for localhost. Not used with sqlite3.
            'PORT': '',  # Set to empty string for default. Not used with sqlite3.
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ],
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    )
}

ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # TODO: Update this later
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_CONFIRM_EMAIL_ON_GET = True


LOGIN_URL = f'{FRONTEND_URL}/login/'
CUSTOM_PASSWORD_RESET_CONFIRM = f'{FRONTEND_URL}/passwordreset/'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = ''
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = ''
AWS_STORAGE_BUCKET_NAME = ''
AWS_DEFAULT_ACL = None
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_S3_REGION_NAME = 'ap-northeast-2'
AWS_S3_SIGNATURE_VERSION = 's3v4'

CELERY_BROKER_URL = "sqs://"
CELERY_BROKER_TRANSPORT_OPTIONS = {
    'region': 'ap-northeast-2',
    'queue_name_prefix': '%s-' % {True: 'dev', False: 'production'}[DEBUG]
}

STATIC_LOCATION = 'static'
STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, STATIC_LOCATION)
STATICFILES_STORAGE = ''
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

PUBLIC_MEDIA_LOCATION = 'media'
MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
DEFAULT_FILE_STORAGE = ''

PRIVATE_MEDIA_LOCATION = 'private'

PRIVATE_STORAGE_CLASS = ''
AWS_PRIVATE_STORAGE_BUCKET_NAME = 's3-back-store'
PRIVATE_STORAGE_AUTH_FUNCTION = 'private_storage.permissions.allow_staff'

if not DEBUG:
    LOG_BASE_DIR = '/var/log/'
else:
    LOG_BASE_DIR = ''

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOG_BASE_DIR + 'debug.log',
            'formatter': 'verbose'
        },
        'djangonative': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOG_BASE_DIR + 'djangonativedebug.log',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['djangonative'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'lessonger': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'chat': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'user_profile': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,

        },
        'files': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,

        },
    },
}

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False
